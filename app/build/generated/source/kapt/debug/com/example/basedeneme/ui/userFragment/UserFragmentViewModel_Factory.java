// Generated by Dagger (https://dagger.dev).
package com.example.basedeneme.ui.userFragment;

import com.example.basedeneme.repository.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserFragmentViewModel_Factory implements Factory<UserFragmentViewModel> {
  private final Provider<UserRepository> repositoryProvider;

  public UserFragmentViewModel_Factory(Provider<UserRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public UserFragmentViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static UserFragmentViewModel_Factory create(Provider<UserRepository> repositoryProvider) {
    return new UserFragmentViewModel_Factory(repositoryProvider);
  }

  public static UserFragmentViewModel newInstance(UserRepository repository) {
    return new UserFragmentViewModel(repository);
  }
}
